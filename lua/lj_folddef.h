/* This is a generated file. DO NOT EDIT! */

static const FoldFunc fold_func[] = {
  fold_kfold_numarith,
  fold_kfold_numabsneg,
  fold_kfold_ldexp,
  fold_kfold_fpmath,
  fold_kfold_fpcall1,
  fold_kfold_fpcall2,
  fold_kfold_numpow,
  fold_kfold_numcomp,
  fold_kfold_intarith,
  fold_kfold_intovarith,
  fold_kfold_bnot,
  fold_kfold_bswap,
  fold_kfold_intcomp,
  fold_kfold_intcomp0,
  fold_kfold_int64arith,
  fold_kfold_int64arith2,
  fold_kfold_int64shift,
  fold_kfold_bnot64,
  fold_kfold_bswap64,
  fold_kfold_int64comp,
  fold_kfold_int64comp0,
  fold_kfold_snew_kptr,
  fold_kfold_snew_empty,
  fold_kfold_strref,
  fold_kfold_strref_snew,
  fold_kfold_strcmp,
  fold_bufhdr_merge,
  fold_bufput_bufstr,
  fold_bufput_kgc,
  fold_bufstr_kfold_cse,
  fold_bufput_kfold_op,
  fold_bufput_kfold_rep,
  fold_bufput_kfold_fmt,
  fold_kfold_add_kgc,
  fold_kfold_add_kptr,
  fold_kfold_add_kright,
  fold_kfold_tobit,
  fold_kfold_conv_kint_num,
  fold_kfold_conv_kintu32_num,
  fold_kfold_conv_kint_ext,
  fold_kfold_conv_kint_i64,
  fold_kfold_conv_kint64_num_i64,
  fold_kfold_conv_kint64_num_u64,
  fold_kfold_conv_kint64_int_i64,
  fold_kfold_conv_knum_int_num,
  fold_kfold_conv_knum_u32_num,
  fold_kfold_conv_knum_i64_num,
  fold_kfold_conv_knum_u64_num,
  fold_kfold_tostr_knum,
  fold_kfold_tostr_kint,
  fold_kfold_strto,
  lj_opt_cse,
  fold_kfold_kref,
  fold_shortcut_round,
  fold_shortcut_left,
  fold_shortcut_dropleft,
  fold_shortcut_leftleft,
  fold_simplify_numadd_negx,
  fold_simplify_numadd_xneg,
  fold_simplify_numsub_k,
  fold_simplify_numsub_negk,
  fold_simplify_numsub_xneg,
  fold_simplify_nummuldiv_k,
  fold_simplify_nummuldiv_negk,
  fold_simplify_nummuldiv_negneg,
  fold_simplify_numpow_k,
  fold_shortcut_conv_num_int,
  fold_simplify_conv_int_num,
  fold_simplify_conv_i64_num,
  fold_simplify_conv_int_i64,
  fold_simplify_conv_flt_num,
  fold_simplify_tobit_conv,
  fold_simplify_floor_conv,
  fold_simplify_conv_sext,
  fold_simplify_conv_narrow,
  fold_cse_conv,
  fold_narrow_convert,
  fold_simplify_intadd_k,
  fold_simplify_intmul_k,
  fold_simplify_intsub_k,
  fold_simplify_intsub_kleft,
  fold_simplify_intadd_k64,
  fold_simplify_intsub_k64,
  fold_simplify_intmul_k32,
  fold_simplify_intmul_k64,
  fold_simplify_intmod_k,
  fold_simplify_intmod_kleft,
  fold_simplify_intsub,
  fold_simplify_intsubadd_leftcancel,
  fold_simplify_intsubsub_leftcancel,
  fold_simplify_intsubsub_rightcancel,
  fold_simplify_intsubadd_rightcancel,
  fold_simplify_intsubaddadd_cancel,
  fold_simplify_band_k,
  fold_simplify_bor_k,
  fold_simplify_bxor_k,
  fold_simplify_shift_ik,
  fold_simplify_shift_andk,
  fold_simplify_shift1_ki,
  fold_simplify_shift2_ki,
  fold_simplify_shiftk_andk,
  fold_simplify_andk_shiftk,
  fold_simplify_andor_k,
  fold_simplify_andor_k64,
  fold_reassoc_intarith_k,
  fold_reassoc_intarith_k64,
  fold_reassoc_dup,
  fold_reassoc_dup_minmax,
  fold_reassoc_bxor,
  fold_reassoc_shift,
  fold_reassoc_minmax_k,
  fold_abc_fwd,
  fold_abc_k,
  fold_abc_invar,
  fold_comm_swap,
  fold_comm_equal,
  fold_comm_comp,
  fold_comm_dup,
  fold_comm_dup_minmax,
  fold_comm_bxor,
  fold_merge_eqne_snew_kgc,
  lj_opt_fwd_aload,
  fold_kfold_hload_kkptr,
  lj_opt_fwd_hload,
  lj_opt_fwd_uload,
  lj_opt_fwd_alen,
  fold_cse_uref,
  lj_opt_fwd_hrefk,
  fold_fwd_href_tnew,
  fold_fwd_href_tdup,
  fold_fload_tab_tnew_asize,
  fold_fload_tab_tnew_hmask,
  fold_fload_tab_tdup_asize,
  fold_fload_tab_tdup_hmask,
  fold_fload_tab_ah,
  fold_fload_str_len_kgc,
  fold_fload_str_len_snew,
  fold_fload_str_len_tostr,
  fold_fload_sbuf,
  fold_fload_func_ffid_kgc,
  fold_fload_cdata_typeid_kgc,
  fold_fload_cdata_int64_kgc,
  fold_fload_cdata_typeid_cnew,
  fold_fload_cdata_ptr_int64_cnew,
  lj_opt_cse,
  lj_opt_fwd_fload,
  fold_fwd_sload,
  fold_xload_kptr,
  lj_opt_fwd_xload,
  fold_fold_base,
  fold_barrier_tab,
  fold_barrier_tnew_tdup,
  fold_prof,
  lj_opt_dse_ahstore,
  lj_opt_dse_ustore,
  lj_opt_dse_fstore,
  lj_opt_dse_xstore,
  lj_ir_emit
};

static const uint32_t fold_hash[1002] = {
0x4ab6a675,
0x505477ff,
0x8f8b5016,
0xffffffff,
0xffffffff,
0x2152601d,
0x68468c17,
0x5f47fc17,
0x3f58bc1c,
0xffffffff,
0x140bfc1d,
0x7c89fc00,
0x4f55fc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5153fc1d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8c8a6014,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x18813fff,
0x6d4e9c17,
0xffffffff,
0x2eb672ae,
0x20c3900c,
0xffffffff,
0xffffffff,
0x908bfc14,
0x9d77ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x81754816,
0x08445c17,
0x27b65e6f,
0x2cb6726e,
0xffffffff,
0x0708701c,
0x624a77ff,
0x45b76e76,
0xffffffff,
0x6856ac17,
0xffffffff,
0xffffffff,
0x68448817,
0xffffffff,
0xffffffff,
0xffffffff,
0x604bfc17,
0x6742881d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x97b14400,
0xffffffff,
0x868bfc06,
0x5457fc1d,
0xffffffff,
0x16a1fc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7e7a63ff,
0xffffffff,
0x6d4c9817,
0x28b65ed3,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x32bc6000,
0xffffffff,
0x2353fc1a,
0x0c005c17,
0x4ab6ae76,
0xffffffff,
0xffffffff,
0x9dc3ffff,
0xffffffff,
0x3660c045,
0x08485c17,
0xffffffff,
0x6e66cc17,
0xffffffff,
0x070c701c,
0x634e77ff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1ec39009,
0xffffffff,
0x0054701c,
0x8a8bfc11,
0x7015fc17,
0xffffffff,
0x604ffc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4ab6a696,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7545ffff,
0xffffffff,
0x9d7fffff,
0xffffffff,
0xffffffff,
0x0c045c17,
0x25b65dd3,
0x948dffff,
0xffffffff,
0x1ec39014,
0x9dc7ffff,
0x0702701c,
0x6e64c817,
0x084c5c17,
0xffffffff,
0x21526017,
0x0710701c,
0xffffffff,
0x97b14800,
0xffffffff,
0x0d0bfc17,
0xffffffff,
0xffffffff,
0x3f56bc1c,
0x0058701c,
0x6744841d,
0x7b87fc00,
0x4d53fc17,
0x4058bc2f,
0xffffffff,
0xffffffff,
0x5a55fc2a,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x38408000,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8a8bfc0e,
0xffffffff,
0x7401ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0c085c17,
0xffffffff,
0x08425c17,
0x9091ffff,
0xffffffff,
0x3b55fc1c,
0x0706701c,
0x08505c17,
0xffffffff,
0xffffffff,
0xffffffff,
0x4ab6aa95,
0x858b4809,
0x66428817,
0xffffffff,
0xffffffff,
0xffffffff,
0x1badfc57,
0x065c701c,
0xffffffff,
0x4cb6aaae,
0x908bfc00,
0x5357fc17,
0xffffffff,
0xffffffff,
0x28b65eb4,
0xffffffff,
0xffffffff,
0xffffffff,
0x169ffc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4cb6aa6e,
0xffffffff,
0x6149fc21,
0x31ba5fff,
0xffffffff,
0xffffffff,
0xffffffff,
0x7405ffff,
0x383e7c00,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0e44741d,
0x2bb67675,
0xffffffff,
0xffffffff,
0x0b405c00,
0x0c0c5c17,
0xffffffff,
0x08465c17,
0x9995ffff,
0xffffffff,
0x3e59fc1c,
0x070a701c,
0x08545c17,
0x3952bfff,
0x888b3c00,
0xffffffff,
0xffffffff,
0xffffffff,
0x0052701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x555bfc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x02627017,
0xffffffff,
0xffffffff,
0xffffffff,
0x614dfc21,
0xffffffff,
0x8d8a6016,
0xffffffff,
0xffffffff,
0x1300741d,
0x7409ffff,
0x7543ffff,
0x3568d000,
0xffffffff,
0xffffffff,
0x20c3900e,
0x0c025c17,
0xffffffff,
0x908bfc16,
0x918bffff,
0x807547ff,
0x34105c17,
0xffffffff,
0x084a5c17,
0x9a99ffff,
0xffffffff,
0x415dfc1c,
0x070e701c,
0x81754818,
0xffffffff,
0x27b65e71,
0x66448417,
0xffffffff,
0xffffffff,
0x0056701c,
0x49b7feb3,
0x6942841d,
0xffffffff,
0x4056bc2f,
0x0064701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x48696c00,
0xffffffff,
0x4d6dfc17,
0x955437ff,
0xffffffff,
0xffffffff,
0xffffffff,
0x868bfc08,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6151fc21,
0xffffffff,
0x8f8b5015,
0xffffffff,
0xffffffff,
0x1304741d,
0x740dffff,
0x6c468fff,
0x7747ffff,
0x4ab6aa76,
0xffffffff,
0xffffffff,
0x0c065c17,
0x5755ffff,
0x928fffff,
0x3760bc45,
0xffffffff,
0x0c145c17,
0xffffffff,
0x084e5c17,
0x9c9dffff,
0x3d55fc2f,
0xffffffff,
0x3311141b,
0x0712701c,
0xffffffff,
0x6952a41d,
0x64488417,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x20c3900b,
0x47b96c1c,
0xffffffff,
0x8a8bfc13,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9da5fc00,
0xffffffff,
0xffffffff,
0x44b76ece,
0x65429417,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x45b76e75,
0xffffffff,
0x7403ffff,
0xffffffff,
0xffffffff,
0x6a448bff,
0xffffffff,
0x1308741d,
0x7311ffff,
0x0e42741d,
0x43b76e8e,
0xffffffff,
0xffffffff,
0x0a3e5c00,
0x0c0a5c17,
0xffffffff,
0x7d93ffff,
0xffffffff,
0xffffffff,
0x3e57fc1c,
0xffffffff,
0x08525c17,
0x9da1ffff,
0xffffffff,
0x1fc39016,
0xffffffff,
0xffffffff,
0x385ebfff,
0xffffffff,
0xffffffff,
0x2ab675d6,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x2353fc19,
0x4ab6ae75,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x2252681d,
0xffffffff,
0x62485fff,
0xffffffff,
0x6b66cfff,
0x614bfc21,
0xffffffff,
0x5954abff,
0x898b7400,
0xffffffff,
0x7407ffff,
0xffffffff,
0x10487417,
0xffffffff,
0x8a8bfc10,
0x130c741d,
0x7115ffff,
0x0e46741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0c0e5c17,
0x0e54741d,
0x9997ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x08565c17,
0x4ab6a695,
0x838b4409,
0x68428417,
0xffffffff,
0x08645c17,
0xffffffff,
0xffffffff,
0x64508417,
0xffffffff,
0x4cb6a6ae,
0x0062701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8b8a6003,
0xffffffff,
0xffffffff,
0xffffffff,
0x4d6bfc17,
0xffffffff,
0xffffffff,
0x24b8701c,
0xffffffff,
0xffffffff,
0x1ec39013,
0x4cb6a66e,
0x6d4a9417,
0x6b64cbff,
0x634c5fff,
0xffffffff,
0x614ffc21,
0xffffffff,
0x2fb672ce,
0xffffffff,
0xffffffff,
0x1302741d,
0x740bffff,
0x104c7417,
0xffffffff,
0xffffffff,
0x3410741d,
0xffffffff,
0x7253ffff,
0xffffffff,
0xffffffff,
0x01607045,
0x5b55fc29,
0x34125c17,
0x0f58741d,
0x9b9bffff,
0x2db6728e,
0x6852a417,
0x3a53fc2f,
0x45b76e96,
0x085a5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x036873ff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x0066701c,
0x05bf9042,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4e6ffc17,
0xffffffff,
0xffffffff,
0xffffffff,
0x96b1fc00,
0x6d489017,
0xffffffff,
0xffffffff,
0xffffffff,
0x63505fff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x848b4808,
0xffffffff,
0xffffffff,
0x1306741d,
0x740fffff,
0x10507417,
0x878a6000,
0xffffffff,
0x4ab6ae96,
0xffffffff,
0x7257ffff,
0x3568d002,
0xffffffff,
0x34106fff,
0x28b65eb3,
0x0f5c741d,
0x7665ffff,
0x6d50a017,
0xffffffff,
0x938c6bff,
0xffffffff,
0x3313141b,
0x085e5c17,
0x1cadffff,
0xffffffff,
0x644a8417,
0xffffffff,
0x096c5c17,
0x9555fc0d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x17806017,
0xffffffff,
0xffffffff,
0xffffffff,
0x22526817,
0xffffffff,
0xffffffff,
0x3411fc1b,
0xffffffff,
0xffffffff,
0xffffffff,
0x48696c02,
0xffffffff,
0xffffffff,
0xffffffff,
0x5e45fc1d,
0x50545fff,
0xffffffff,
0x12407400,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x130a741d,
0x7313ffff,
0x4ab6a676,
0x8f8b5017,
0x6f15fc29,
0xffffffff,
0xffffffff,
0x0e52741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9da3ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9511fc0d,
0xffffffff,
0xffffffff,
0xffffffff,
0x644e8417,
0x19bf9000,
0xffffffff,
0xffffffff,
0x8d8a6015,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x20c3900d,
0x42b76dd3,
0xffffffff,
0x908bfc15,
0x65429017,
0xffffffff,
0xffffffff,
0xffffffff,
0x624a5fff,
0x159e6817,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x34106018,
0x27b65e70,
0xffffffff,
0x104a7417,
0xffffffff,
0xffffffff,
0x130e741d,
0x9d17ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x015e7045,
0xffffffff,
0x0e56741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x576dffff,
0xffffffff,
0x9da7ffff,
0x4cb8a81c,
0xffffffff,
0x868bfc07,
0xffffffff,
0x08665c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8e8b5014,
0xffffffff,
0xffffffff,
0xffffffff,
0x28b65ed4,
0xffffffff,
0xffffffff,
0x4ab6aa75,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x2252641d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x634e5fff,
0xffffffff,
0x5854a7ff,
0xffffffff,
0xffffffff,
0xffffffff,
0x78113c18,
0xffffffff,
0xffffffff,
0xffffffff,
0x104e7417,
0xffffffff,
0xffffffff,
0x3412741d,
0x2bb67695,
0x20c3900a,
0xffffffff,
0xffffffff,
0x8a8bfc12,
0xffffffff,
0x0f5a741d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x1aabffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x096a5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x5e45fc17,
0xffffffff,
0xffffffff,
0x908bfc04,
0xffffffff,
0x5d43fc1d,
0x26b65dd4,
0xffffffff,
0x113e7400,
0x1ec39015,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x29b675d5,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x34126fff,
0xffffffff,
0x7667ffff,
0x2353fc18,
0xffffffff,
0xffffffff,
0xffffffff,
0x8675ffff,
0xffffffff,
0x1dafffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x49b7fed3,
0x096e5c17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x624877ff,
0xffffffff,
0x8a8bfc0f,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x3413fc1b,
0xffffffff,
0xffffffff,
0x6049fc17,
0xffffffff,
0xffffffff,
0xffffffff,
0x69468c1d,
0x5f47fc1d,
0xffffffff,
0xffffffff,
0x828b4408,
0x6a4287ff,
0x5255fc1d,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4ab6aa96,
0xffffffff,
0xffffffff,
0x7e7863ff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x726bffff,
0x908bfc01,
0xffffffff,
0xffffffff,
0xffffffff,
0x9679ffff,
0xffffffff,
0x96b3ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9dc1ffff,
0xffffffff,
0xffffffff,
0x9db40000,
0xffffffff,
0xffffffff,
0xffffffff,
0x634c77ff,
0x8175481c,
0x30ba73ff,
0x22526417,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x6956ac1d,
0xffffffff,
0x604dfc17,
0x6944881d,
0xffffffff,
0xffffffff,
0xffffffff,
0x45b76e95,
0x565a5fff,
0x5c54a429,
0x34126018,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x44b76eae,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x726fffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x43b76e6e,
0xffffffff,
0x4bb7ffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x9dc5ffff,
0xffffffff,
0x0700701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x635077ff,
0x8d8a6017,
0x04be73ff,
0x4ab6ae95,
0xffffffff,
0xffffffff,
0x5d43fc17,
0x3568d001,
0x3c54bc1c,
0xffffffff,
0x7985fc00,
0x20c3900f,
0x6051fc17,
0x908bfc17,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x78133c18,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x27b65e72,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x982bffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x4cb8a41c,
0x7f73ffff,
0x46b76dae,
0xffffffff,
0xffffffff,
0x48696c01,
0x7a866800,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff,
0x8e8b4c14,
0x868bfc09,
0xffffffff,
0x0704701c,
0xffffffff,
0xffffffff,
0xffffffff,
0xffffffff
};

#define fold_hashkey(k)	(lj_rol(lj_rol((k),21)-(k),14)%1001)

